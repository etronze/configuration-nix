{ config, pkgs, ... }:

{
  nix.maxJobs = 4;

  # FIXME: UUID detection is currently broken
  boot.loader.grub.fsIdentifier = "provided";

  # Add some more video drivers to give X11 a shot at working in
  # VMware and QEMU.
  # services.xserver.videoDrivers = mkOverride 40 [ "virtualbox" "vmware" "cirrus" "vesa" "modesetting" ];

  sound.mediaKeys.enable = true; # enable volume control buttons

  powerManagement.enable = false;
  system.stateVersion = mkDefault "18.03";

  # Let demo build as a trusted user.
  # nix.trustedUsers = [ "demo" ];

  # fileSystems."/mnt" = {
  #   fsType = "vboxsf";
  #   device = "nameofdevicetomount";
  #   options = [ "rw" ];
  # };

  # By default, the NixOS VirtualBox demo image includes SDDM and Plasma.
  # If you prefer another desktop manager or display manager, you may want
  # to disable the default.
  # services.xserver.desktopManager.plasma5.enable = lib.mkForce false;
  # services.xserver.displayManager.sddm.enable = lib.mkForce false;

  # Enable GDM/GNOME by uncommenting above two lines and two lines below.
  # services.xserver.displayManager.gdm.enable = true;
  # services.xserver.desktopManager.gnome3.enable = true;

  # networking.hostName = "gopal.px.io";
  # networking.hostId = "7ca60493";
  # networking.nameservers = [ "1.1.1.1" "8.8.8.8" "8.8.4.4" ];
  # networking.dhcpcd.enable = false;
  # networking.enableIPv6 = false;
  # networking.useDHCP = false;

  i18n = {
       inputMethod.enabled = uim;
  };

  time.timeZone = "Asia/Shanghai";

  nixpkgs.config = { allowBroken = true; allowUnfree = true; };

  # List packages installed in system profile. To search, run:
  # \$ nix search wget
  #
  # The set of packages that appear in
  # /run/current-system/sw.
  # These packages are automatically available to all users, and are automatically updated every time you rebuild the system configuration.
  # (The latter is the main difference with installing them in the default profile,
  # /nix/var/nix/profiles/default.
  environment.systemPackages = with pkgs; [
    curl
    wget
    vim
    emacs
    git
    w3m
    dmenu
    tmux
    gnupg
    google-chrome
    lua
    aspell
    html-tidy
    imagemagick
    zip unzip gnutar
    nodejs
    xsel xclip
    cmake clang
    pandoc
    gnumake
    universal-ctags global ripgrep
    libreoffice
    sdcv
    sbcl
    ffmpeg
    python3
    fortune
    typespeed
    languagetool
    python.pkgs.setuptools 
    python.pkgs.pip
    python3.pkgs.pip
    # python.pkgs.percol
    python.pkgs.jsbeautifier
    python.pkgs.jedi
    python.pkgs.flake8
    davmail
    popfile #分捡邮件
    erlang
    # chromium
    zsh
    automake
    libtool
    autoconf
    gcc
  ];
}
